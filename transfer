FROM ubuntu:20.04 AS baseline

ENV DEBIAN_FRONTEND="noninteractive"

RUN apt -y update && \
    apt -y install apache2-utils \
                   bash \
                   sudo \
                   sshpass \
                   dnsutils \
                   python3 \
                   python3-pip \
                   curl \
                   net-tools \
                   git \
                   openssh-client \
                   openssl \
                   wget

# Install Required Python3 modules
RUN pip3 install ansible==5.3.0 \
                 paramiko==2.9.2 \
                 dnspython3==1.15.0 \
                 kubernetes==21.7.0 \
                 docker==5.0.3 \
                 netaddr==0.8.0 \
                 cryptography==36.0.1 \
                 watchdog==2.1.6

FROM baseline as tools
# Install:
# - Flux Cli.
# - ArgoCD Cli.
# - RKE.
# - Kubectl.
# - helmV3 + Helm-diff.
# - Azure client.
# - KubeSeal.
# - Git credential manager.
RUN wget -O - https://fluxcd.io/install.sh | bash \
    && wget https://github.com/derailed/k9s/releases/download/$(curl -L -s "https://api.github.com/repos/derailed/k9s/releases/latest" | grep -Poe '"tag_name": "\K.*?(?=")' | head -n 1)/k9s_Linux_x86_64.tar.gz -O /tmp/k9s.tar.gz && tar xzvfC /tmp/k9s.tar.gz /usr/bin \
    && wget https://github.com/argoproj-labs/argocd-autopilot/releases/download/$(curl --silent "https://api.github.com/repos/argoproj-labs/argocd-autopilot/releases/latest" | grep '"tag_name"' | sed -E 's/.*"([^"]+)".*/\1/')/argocd-autopilot-linux-amd64.tar.gz -O /tmp/argocd-autopilot.tar.gz && tar xzvf /tmp/argocd-autopilot.tar.gz -C /tmp && mv /tmp/argocd-autopilot-linux-amd64 /usr/bin/argocd-autopilot \
    && wget https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64 -O /usr/local/bin/argocd && chmod +x /usr/local/bin/argocd \
    && wget https://github.com/rancher/rke/releases/download/$(curl -L -s "https://api.github.com/repos/rancher/rke/releases/latest" | grep -Poe '"tag_name": "\K.*?(?=")' | head -n 1)/rke_linux-amd64 -O /bin/rke && chmod +x /bin/rke \
    && wget https://github.com/projectcalico/calicoctl/releases/download/$(curl -L -s "https://api.github.com/repos/projectcalico/calicoctl/releases/latest" | grep -Poe '"tag_name": "\K.*?(?=")' | head -n 1)/calicoctl-linux-amd64 -O /bin/calicoctl && chmod +x /bin/calicoctl \
    && wget https://github.com/mikefarah/yq/releases/download/$(curl -L -s "https://api.github.com/repos/mikefarah/yq/releases/latest" | grep -Poe '"tag_name": "\K.*?(?=")' | head -n 1)/yq_linux_amd64 -O /bin/yq && chmod +x /bin/yq \
    && wget https://github.com/cilium/cilium-cli/releases/latest/download/cilium-linux-amd64.tar.gz -O /tmp/cilium.tar.gz && tar xzvfC /tmp/cilium.tar.gz /usr/bin \
    && wget "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" -O /bin/kubectl && chmod +x /bin/kubectl \
    && wget -O - https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash \
    && wget -O - https://aka.ms/InstallAzureCLIDeb | bash \
    && wget https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.17.3/kubeseal-0.17.3-linux-amd64.tar.gz -O /tmp/kubeseal.tar.gz && tar -xf /tmp/kubeseal.tar.gz -C /usr/bin/ \
    && wget https://github.com/GitCredentialManager/git-credential-manager/releases/download/v2.0.632/gcmcore-linux_amd64.2.0.632.34631.deb -O /tmp/git-cred-manager.deb \
    && dpkg -i /tmp/git-cred-manager.deb

# Generate the user home directory and workspace.
FROM baseline as userspace

ARG UID=1000
ARG GID=1000
ARG USERNAME=anon

COPY ./src/ansible.cfg /etc/ansible/ansible.cfg
COPY ./scripts/USAGE.txt /usr/var/USAGE.txt
COPY ./scripts/entrypoint.sh /entrypoint
COPY ./scripts/kubectl-forward.sh /kubeforward

# Copy tools to the user environment.
COPY --from=tools /usr/bin/az /usr/bin/az
COPY --from=tools /usr/local/bin/argocd /usr/local/bin/argocd
COPY --from=tools /usr/bin/argocd-autopilot /usr/bin/argocd-autopilot
COPY --from=tools /usr/bin/calicoctl /usr/bin/calicoctl
COPY --from=tools /usr/bin/cilium /usr/bin/cilium
COPY --from=tools /usr/local/bin/flux /usr/bin/flux
COPY --from=tools /usr/bin/kubectl /usr/bin/kubectl
COPY --from=tools /usr/bin/kubeseal /usr/bin/kubeseal
COPY --from=tools /usr/bin/rke /usr/bin/rke
COPY --from=tools /usr/local/bin/helm /usr/local/bin/helm
COPY --from=tools /usr/bin/k9s /usr/bin/k9s
COPY --from=tools /usr/bin/yq /usr/bin/yq
COPY --from=tools /usr/local/bin/git-credential-manager-core /usr/local/bin/git-credential-manager-core

# Add user.
RUN groupadd -g ${GID} ${USERNAME} \
    && useradd -m ${USERNAME} -u ${UID} -g ${GID} -s /bin/bash

# Create directory tree.
RUN mkdir /data \
    && sudo -u ${USERNAME} mkdir -p /home/${USERNAME}/.kube

# Give proper permissions
# Add user.
RUN chown -R ${USERNAME}:${USERNAME} /data \
    && chmod +x /entrypoint && chown ${USERNAME}:${USERNAME} /entrypoint \
    && chmod +x /kubeforward && chown ${USERNAME}:${USERNAME} /kubeforward \
    && usermod -aG sudo,root ${USERNAME} \
    && echo "${USERNAME}  ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/${USERNAME}

# Install Helm plugins
RUN sudo -u ${USERNAME} helm plugin install https://github.com/databus23/helm-diff

WORKDIR /home/${USERNAME}

USER ${USERNAME}

FROM userspace as finale
RUN git-credential-manager-core configure \
    && git config --global user.name "cicd-user" \
    && git config --global user.email "cicd@{{ cluster_domain }}"
ENTRYPOINT ["/entrypoint"]
